
[tmc2240 extruder]
cs_pin: EBBCan: PA15
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
interpolate: False
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). The default is True.
# max current is 1.0A
# Is this converted to IRUN range 0-31? aka motor run current based on the sense 
# resistor value by klipper?
# IRUN â‰¥ 8: Current settings for IRUN below 8 do not work with automatic tuning.
run_current: 0.45
#run_current: 0.6
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
# hold_current: 0.12
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
rref: 12000
#   The resistance (in ohms) of the resistor between IREF and GND. The
#   default is 12000.
stealthchop_threshold: 99999
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.
driver_IHOLDDELAY: 8
driver_IRUNDELAY: 2
#driver_TPOWERDOWN: 10
driver_TBL: 0
driver_TOFF: 3
driver_HEND: 4
driver_HSTRT: 3
#driver_FD3: 0
driver_TPFD: 0
##driver_CHM: 0
##driver_VHIGHFS: 0
##driver_VHIGHCHM: 0
##driver_DISS2G: 0
##driver_DISS2VS: 1
driver_PWM_AUTOSCALE: True
driver_PWM_AUTOGRAD: True
#driver_PWM_FREQ: 2
##driver_FREEWHEEL: 0
driver_PWM_GRAD: 12
driver_PWM_OFS: 40
driver_PWM_REG: 15
driver_PWM_LIM: 12
driver_SGT: 30
driver_SEMIN: 2
#driver_SEUP: 3
driver_SEMAX: 8
#driver_SEDN: 2
#driver_SEIMIN: 0
#driver_SFILT: 1
#driver_SG4_ANGLE_OFFSET: 1
#   Set the given register during the configuration of the TMC2240
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
diag0_pin: sb2240:PB3
#diag1_pin:
#   The micro-controller pin attached to one of the DIAG lines of the
#   TMC2240 chip. Only a single diag pin should be specified. The pin
#   is "active low" and is thus normally prefaced with "^!". Setting
#   this creates a "tmc2240_stepper_x:virtual_endstop" virtual pin
#   which may be used as the stepper's endstop_pin. Doing this enables
#   "sensorless homing". (Be sure to also set driver_SGT to an
#   appropriate sensitivity value.) The default is to not enable
#   sensorless homing.

[gcode_macro configure_extruder]
gcode:
  SET_TMC_FIELD STEPPER=extruder FIELD=pwm_meas_sd_enable VALUE=1
  SET_TMC_FIELD STEPPER=extruder FIELD=sg4_filt_en VALUE=1
  SET_TMC_FIELD STEPPER=extruder FIELD=freewheel VALUE=1
  SET_TMC_FIELD STEPPER=extruder FIELD=SG4_THRS VALUE=10
  SET_TMC_FIELD STEPPER=extruder FIELD=IHOLD VALUE=0
  SET_TMC_FIELD STEPPER=extruder FIELD=THIGH VELOCITY=50
  SET_TMC_FIELD STEPPER=extruder FIELD=TCOOLTHRS VALUE=4000
  SET_TMC_FIELD STEPPER=extruder FIELD=TPWMTHRS VELOCITY=1
  SET_TMC_FIELD STEPPER=extruder FIELD=OVERTEMPPREWARNING_VTH VALUE=2885 # 7.7 * 100 C + 2038
  # The following is absolutely critical: set the overvoltage snubber to a sensible voltage.
  # This should be set to about 0.8 V above your power supply's idle voltage.
  # Your PSU voltage can be read from the TMC 2240 by issuing a GCODE command:
  # DUMP_TMC stepper=extruder register=ADC_VSUPPLY_AIN
  # The voltage is the value of adc_vsupply multiplied by 0.009732
  # It is also possible to use adc_vsupply + 82 here, which works out to be the same.
  # my voltage is 24.154
  # {% set v = (24.7/0.009732)|int %}
  {% set v = (2482+82)|int %}
  SET_TMC_FIELD STEPPER=extruder FIELD=OVERVOLTAGE_VTH VALUE={ v }