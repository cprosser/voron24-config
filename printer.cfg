# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section
[include mainsail.cfg]
[include sensorless.cfg]
[include stealthburner_leds.cfg]


# setup up a pin that can be used for triggering an oscilloscope
# this fan has been changed to be 5V out which is OK for both of my scopes
# 
[output_pin scope_trigger]
pin: PE11
value: 1
shutdown_value: 0

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_5A0046001951313133353932-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000             #input shaper says can go up to 4500 limit on Y azis
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


# Fitted shaper 'mzv' frequency = 37.2 Hz (vibrations = 0.0%, smoothing ~= 0.147)
# To avoid too much smoothing with 'mzv', suggested max_accel <= 4100 mm/sec^2
[input_shaper]
shaper_freq_x: 62.0
shaper_type_x: mzv
shaper_freq_y: 37.2
shaper_type_y: mzv


#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: EBBCan: PB6
# for sensorless
#endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

#  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 20   #Max 100

# turn this off while tuning sensorless
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
#diag_pin: ^PG6
#driver_SGTHRS: 83

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
# sensorless now endstop_pin: PG9
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

#  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 20  #Max 100
# turn of while tuning sensorless homing
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9
driver_SGTHRS: 97

#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
#endstop_pin: ^PG10
# tap uses the Probe entry as the endstop, not the endstop that's installed at the edge of the bed
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 210

#  Uncomment below for 300mm build
position_max: 260

##  Uncomment below for 350mm build
#position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[include canhead.cfg]

#include these here so SAVE_CONFIG willwork
[extruder]
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721

#####################################################################
#   Bed Heater
#####################################################################


##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  Keenovo branded bed heaters should use Generic 3950
##  LDO branded bed heaters will have the sensor type labelled on the heater
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.8
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
# pin comes from canhead.cfg
#pin: PG15
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 3.0
samples: 5
samples_result: median
sample_retract_dist: 1.5
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
# from canhead.cfg
#pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
# from canhead.cfg
#pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
fan_speed: 1.0

[fan_generic Nevermore]
pin: PD13
##  Exhaust fan - FAN3
#[heater_fan exhaust_fan]
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#####################################################################
#   LED Control
#####################################################################

# [output_pin caselight]
# ## Chamber Lighting - CNC_FAN5
# pin: PD15
# pwm:true
# shutdown_value: 0
# value:0
# cycle_time: 0.01


#####################################################################
#   Additional Sensors
#####################################################################

# [temperature_sensor chamber_temp]
# ## Chamber Temperature - T1
# sensor_type: ATC Semitec 104NT-4-R025H42G
# sensor_pin: PF5
# min_temp: 0
# max_temp: 100
# gcode_id: chamber_th

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

# per https://docs.vorondesign.com/community/howto/clee/sensorless_xy_homing.html
# commenting out the safe z home block
# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:202,300
# speed:100
# z_hop:10
# z_hop_speed:10

[homing_override]

axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}

  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}

  {% if home_all or 'Z' in params %}
    G90
    G1 X150 Y150
    G28 Z
    G1 Z10
  {% endif %}

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
#  Gantry Corners for 300mm Build
#  Uncomment for 300mm build
gantry_corners:
  -60,-10
  360,370
#  Probe points
points:
  50,25
  50,225
  250,225
  250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
#gantry_corners:
#   -60,-10
#   410,420
##  Probe points
#points:
#   50,25
#   50,275
#   300,275
#   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

#[display]
##  mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

###  Set RGB values on boot up for each Neopixel. 
###  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------
[bed_mesh]
speed: 300
horizontal_move_z: 4
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

#	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260

##	Uncomment for 350mm build
#mesh_min: 40, 40
#mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
algorithm: bicubic
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
zero_reference_position: 125, 125



[force_move]
enable_force_move: True


[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    #  Uncomment for 300 build
    G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

   
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    {% if not params.EXTRUDER %}
      SET_DISPLAY_TEXT MSG="Extruder temp not set"
      CANCEL_PRINT
    {% endif %}

    G28                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed

    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info


    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
    M109 S150    

    # needed when trying to fine tune the SB2240
    #CONFIGURE_EXTRUDER

    # Uncomment for V2 (Quad gantry level AKA QGL)
    SET_DISPLAY_TEXT MSG="QGL"      # Displays info
    STATUS_LEVELING                 # Sets SB-leds to leveling-mode
    quad_gantry_level               # Levels the buildplate via QGL
    G28 Z                           # Homes Z again after QGL

    #  Uncomment for bed mesh (2 of 2)
    SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
    STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
    bed_mesh_calibrate                 # Starts bed mesh

    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
    STATUS_HEATING                                                # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
    M107                                                          # Turns off partcooling fan
    M109 S{target_extruder}                                       # Heats the nozzle to printing temp


    # Gets ready to print by doing a purge line and updating the SB-leds
    SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
    STATUS_PRINTING                                  # Sets SB-leds to printing-mode
    G0 X4 Y4 F10000                     # Moves to starting point
    G0 Z0.4                                          # Raises Z to 0.4
    G91                                              # Incremental positioning 
    G1 X100 E20 F1000                                # Purge line
    G90                                              # Absolut position

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro HEATSOAK_BED]
description: Heatsoak bed at a specified temperature and wait for a specific amount of time
gcode:
    STATUS_HEATING
    {% set SETPOINT_TEMP = params.TEMP|default(0)|int %}
    {% set TIME = params.SOAKTIME|default(8)|int %}
    {% set _COOLDOWN = params.COOLDOWN|default(0)|int %}

    RESPOND MSG="Heating bed..."
    G90
    G1 X150 Y150 Z15 F9000                    # Goes to center of the bed
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan
    SET_FAN_SPEED FAN=Nevermore SPEED=0.6                    # Turns on the nevermore

    M190 S{SETPOINT_TEMP}

    # tieme passed is in minutes.  Do wait for TIME minutes.
    {% if TIME > 0 %}
        {% for _ in range(1, TIME) %}
            RESPOND MSG="Heatsoak: {_} of {TIME} min"
            G4 P{60000 * 1}
        {% endfor %}
    {% else %}
        RESPOND MSG="No heat soak needed, continue."
    {% endif %}

    # all done, close up shop and turn off heater if ask, else leave it on.
    RESPOND MSG="Bed temperature OK."
    {% if _COOLDOWN %}
      RESPOND MSG="Release Temp."
      M190 S0
    {% endif %}

    # this is for mobileraker notifications
    # https://github.com/Clon1998/mobileraker_companion/blob/main/docs/Custom_Notifications.md
    M117 $MR$: End Bed heatsoak {TEMP} for {TIME}

    STATUS_READY

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 53.200
#*# pid_ki = 3.139
#*# pid_kd = 225.434
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 37.831
#*# pid_ki = 5.044
#*# pid_kd = 70.934
#*#
#*# [bed_mesh fifteen]
#*# version = 1
#*# points =
#*# 	0.077500, 0.070000, 0.086250, 0.116250, 0.128750, 0.116250, 0.088750, 0.052500, 0.038750, 0.042500, 0.053750, 0.063750, 0.067500, 0.063750, 0.050000
#*# 	0.052500, 0.038750, 0.055000, 0.088750, 0.106250, 0.095000, 0.062500, 0.031250, 0.017500, 0.021250, 0.036250, 0.051250, 0.056250, 0.055000, 0.041250
#*# 	0.038750, 0.027500, 0.048750, 0.081250, 0.100000, 0.085000, 0.046250, 0.015000, 0.001250, 0.001250, 0.017500, 0.037500, 0.041250, 0.040000, 0.023750
#*# 	0.018750, 0.011250, 0.031250, 0.063750, 0.078750, 0.060000, 0.023750, -0.006250, -0.022500, -0.022500, -0.000000, 0.025000, 0.032500, 0.030000, 0.008750
#*# 	0.026250, 0.017500, 0.036250, 0.067500, 0.082500, 0.063750, 0.028750, -0.002500, -0.018750, -0.012500, 0.011250, 0.031250, 0.040000, 0.035000, 0.011250
#*# 	0.017500, 0.006250, 0.027500, 0.061250, 0.081250, 0.065000, 0.026250, -0.005000, -0.021250, -0.016250, 0.011250, 0.030000, 0.040000, 0.038750, 0.008750
#*# 	0.010000, -0.000000, 0.022500, 0.057500, 0.078750, 0.067500, 0.028750, -0.002500, -0.018750, -0.013750, 0.007500, 0.026250, 0.037500, 0.036250, 0.006250
#*# 	0.016250, 0.006250, 0.025000, 0.058750, 0.081250, 0.068750, 0.031250, 0.000000, -0.012500, -0.008750, 0.011250, 0.031250, 0.043750, 0.038750, 0.006250
#*# 	0.017500, 0.008750, 0.027500, 0.060000, 0.081250, 0.067500, 0.030000, 0.001250, -0.008750, -0.003750, 0.017500, 0.033750, 0.045000, 0.033750, 0.002500
#*# 	0.011250, 0.002500, 0.021250, 0.053750, 0.073750, 0.061250, 0.018750, -0.010000, -0.020000, -0.012500, 0.011250, 0.032500, 0.042500, 0.030000, -0.001250
#*# 	0.006250, -0.003750, 0.016250, 0.050000, 0.070000, 0.055000, 0.012500, -0.022500, -0.033750, -0.026250, 0.001250, 0.025000, 0.031250, 0.021250, -0.007500
#*# 	0.011250, -0.002500, 0.018750, 0.053750, 0.076250, 0.060000, 0.020000, -0.015000, -0.030000, -0.026250, -0.001250, 0.020000, 0.027500, 0.021250, -0.003750
#*# 	0.030000, 0.018750, 0.040000, 0.073750, 0.093750, 0.078750, 0.033750, -0.003750, -0.017500, -0.015000, 0.007500, 0.023750, 0.030000, 0.025000, 0.005000
#*# 	0.038750, 0.030000, 0.050000, 0.080000, 0.096250, 0.078750, 0.033750, -0.003750, -0.020000, -0.018750, 0.002500, 0.020000, 0.030000, 0.027500, 0.021250
#*# 	0.060000, 0.052500, 0.063750, 0.090000, 0.105000, 0.088750, 0.046250, 0.007500, -0.008750, -0.007500, 0.010000, 0.030000, 0.036250, 0.036250, 0.052500
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 259.94
#*# min_y = 40.0
#*# max_y = 259.94
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.020000, 0.086250, 0.035000, 0.022500, 0.000000
#*# 	-0.025000, 0.053750, -0.002500, 0.011250, -0.020000
#*# 	-0.030000, 0.046250, 0.000000, 0.007500, -0.027500
#*# 	-0.022500, 0.067500, 0.006250, 0.022500, -0.020000
#*# 	0.076250, 0.130000, 0.057500, 0.046250, 0.012500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 260.0
#*# min_y = 40.0
#*# max_y = 260.0
#*#
#*# [probe]
#*# z_offset = -0.360
